#!/usr/bin/python

##### stratifica per if search_depth == high sin dall inizio:

import sys

def filter_autosomic_recessive_variants():
    global all_variants
    for row in all_variants:
        all_col = row.split('\t')
        my_col = all_col[9:]
    
        fa_ch_mo = []
        for member in my_col:
            if member == '.':
                fa_ch_mo.append(member)
            
            elif member in possible_members:
                fa_ch_mo.append('./.')

            else:
                fa_ch_mo.append(member.split(":")[0])

        father, child, mother = fa_ch_mo

        if child[0] != '.' and child[2] != '.' and int(child[0]) != 0 and int(child[2]) != 0:
            if search_depth == "high":
                if ( child[0] in father or child[0] in mother ):
                    output.append(row)
            elif search_depth == "standard":
                pass ##########################RAGIONARCI
            else:
                print("INVALID DEPTH ARGUMENT, PLEASE INSERT high OR standard")

    sys.stdout.write('\n'.join(output))
    




input_from_vcf = sys.stdin.read()

disease_type = sys.argv[1]

search_depth = sys.argv[2]    # "high" means we consider also new mutations in child (but at least one acquired from parents)
                              # "standard" means we consider only mutations fully inherited by parents according to the genetic pattern of disease

family_members = ["father", "mother", "child"]

output = []

all_variants = input_from_vcf.split('\n')
all_variants = all_variants[1:-1]     # The last element is an empty string


if disease_type == "-ar":
    filter_autosomic_recessive_variants()

elif disease_type == '-ad':
    pass

else:
    print("INVALID ARGUMENT, PLEASE INSERT -ad OR -ar")
    sys.exit(1)
    




